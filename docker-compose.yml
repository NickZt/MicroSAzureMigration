services:
  postgres-resource:
    container_name: postgres-resource
    image: postgres:17-alpine
    environment:
      POSTGRES_DB: resource-db
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ./init-scripts/resource-db:/docker-entrypoint-initdb.d


  postgres-song:
    container_name: postgres-song
    image: postgres:17-alpine
    environment:
      POSTGRES_DB: song-db
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - ./init-scripts/song-db:/docker-entrypoint-initdb.d


  resource-service:
    build: ./resource-service
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: ${RESOURCE_DB_URL}
      POSTGRES_DB_USER: ${DB_USER}
      POSTGRES_DB_PASSWORD: ${DB_PASSWORD}
      SONG_SERVICE_URL: ${SONG_SERVICE_URL}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: ${EUREKA_CLIENT_SERVICEURL}
      WEB_APP_TYPE: ${WEB_APPL_TYPE}


  song-service:
    build: ./song-service
    deploy:
      replicas: 2
    ports:
      - "8082-8083:8082"
    environment:
      SPRING_DATASOURCE_URL: ${SONG_DB_URL}
      POSTGRES_DB_USER: ${DB_USER}
      POSTGRES_DB_PASSWORD: ${DB_PASSWORD}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: ${EUREKA_CLIENT_SERVICEURL}
      WEB_APP_TYPE: ${WEB_APPL_TYPE}

  discovery:
    build: ./discovery
    ports:
      - "8761:8761"

  gateway:
    build: ./gateway
    ports:
      - "8080:8080"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: ${EUREKA_CLIENT_SERVICEURL}

networks:
  default:
    name: microservices-network
